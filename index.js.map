{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '49355528-35596c2c6a34b438a74657cc9';\n\nexport async function fetchImages(query, page = 1, perPage = 15) {\n    try {\n        const response = await axios.get(BASE_URL, {\n            params: {\n                key: API_KEY,\n                q: query,\n                image_type: 'photo',\n                orientation: 'horizontal',\n                safesearch: true,\n                page,       \n                per_page: perPage, \n            },\n        });\n\n        if (response.data.hits.length === 0) {\n            return [];\n        }\n\n        return response.data.hits;\n    } catch (error) {\n        console.error('Error fetching images:', error);\n        return [];\n    }\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n\n\n\n\nexport async function renderGallery(images) {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n\n  const markup = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <li class=\"gallery-item\">\n          <a href=\"${largeImageURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p><b>Likes:</b> ${likes}</p>\n            <p><b>Views:</b> ${views}</p>\n            <p><b>Comments:</b> ${comments}</p>\n            <p><b>Downloads:</b> ${downloads}</p>\n          </div>\n        </li>\n      `\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', markup);\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { fetchImages } from './js/pixabay-api';\nimport { renderGallery } from './js/render-functions';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst form = document.querySelector('.form');\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconst loadMoreBtn = document.querySelector('.load-more');\n\nlet query = ''; \nlet page = 1;   \nconst perPage = 15; \n\n\nloadMoreBtn.style.display = 'none';\n\nform.addEventListener('submit', onSubmit);\nloadMoreBtn.addEventListener('click', onLoadMore);\n\nasync function onSubmit(event) {\n    event.preventDefault();\n\n    query = event.currentTarget.elements['search-text'].value.trim();\n    page = 1; \n\n    if (!query) {\n        iziToast.warning({\n            title: 'Warning',\n            message: 'Please enter a search term!',\n        });\n        return;\n    }\n\n    gallery.innerHTML = '';\n    loadMoreBtn.style.display = 'none'; \n    loader.style.display = 'block';\n    try {\n        const images = await fetchImages(query, page, perPage);\n\n        if (images.length === 0) {\n            iziToast.error({\n                title: 'Error',\n                message: 'Sorry, no images found. Try again!',\n            });\n            return;\n        }\n\n        renderGallery(images);\n      loadMoreBtn.style.display = 'block'; \n      new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionDelay: 250,\n        });\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Failed to fetch images. Please try again later.',\n        });\n    } finally {\n        loader.style.display = 'none';\n    }\n}\n\nasync function onLoadMore() {\n  page += 1;\n  loader.style.display = 'block';\n  try {\n    const images = await fetchImages(query, page, perPage);\n\n    if (images.length === 0) {\n      iziToast.info({\n        title: 'Info',\n        message: 'No more images to load.',\n      });\n      loadMoreBtn.style.display = 'none';\n      return;\n    }\n\n  \n    const markup = images\n      .map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n        return `<li class=\"gallery-item\">\n          <a href=\"${largeImageURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" loading=\"lazy\" />\n          </a>\n          <div class=\"info\">\n            <p><b>Likes:</b> ${likes}</p>\n            <p><b>Views:</b> ${views}</p>\n            <p><b>Comments:</b> ${comments}</p>\n            <p><b>Downloads:</b> ${downloads}</p>\n          </div>\n        </li>`;\n      })\n      .join('');\n\n    gallery.insertAdjacentHTML('beforeend', markup); \n\n\n    new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionDelay: 250,\n        });\n\n\n    const galleryItem = gallery.querySelector('.gallery-item');\n    const cardHeight = galleryItem.getBoundingClientRect().height;\n    window.scrollBy({\n      top: cardHeight * 2,\n      behavior: 'smooth', \n    });\n    if (images.length < perPage) {\n      iziToast.info({\n        title: 'Info',\n        message: \"We're sorry, but you've reached the end of search results.\",\n      });\n      loadMoreBtn.style.display = 'none'; \n    } \n    \n    \n\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Failed to fetch images. Please try again later.',\n    });\n  } finally {\n    loader.style.display = 'none';\n  }\n}"],"names":["BASE_URL","API_KEY","fetchImages","query","page","perPage","response","axios","error","renderGallery","images","gallery","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","loader","loadMoreBtn","onSubmit","onLoadMore","event","iziToast","SimpleLightbox","cardHeight"],"mappings":"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"}